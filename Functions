1.what is a function?
- a process for executing a task, reusable
- useful for re-act similar stuff

#stay DRY - Don't Repeat Yourself!
(WET - write everything twice)

#*Abstract away* code for other users

2.function structure
def name_of_function():
  #block of runnable code
 
def say_hi():
	print("what is your name?")
	name = input()
	print(f"hi,  {name}")

say_hi()

def sing_happy_birthday():
	print("Happy birthday to you")
	print("Happy birthday to you")
	print("Happy birthday dear you")
	print("Happy birthday to you")

for i in range(2,4):
	sing_happy_birthday()
	
	
3. return value for functions
#return will exit the function, anthing after return won't be touched
#return will outputs whatever value is placed after the return keyword
#return pops the function off of the call stack

def square_of_7():
	return 7**2

result = square_of_7()
print(result)

from random import random

def filp_coin():
	#random() generate random number 0 - 1 (no 1)
	if(random() > 0.5):
		return "heads"
	else :
		return "tails"

#print(filp_coin())
#if has the same function definination, it will overwrite and pick the bottom one 
def filp_coin():
	#random() generate random number 0 - 1 (no 1)
	if(random() > 0.5):
		return "HEADS"
	else :
		return "TAILS"

print(filp_coin())

#只有一个if条件时if需要在最后，这是为啥？。。 
def generate_evens():
    return [x for x in range(1,50) if x % 2 == 0 ]
    
4. function parameters
def square(num):
	return num * num
print(square(4))  #16

def add(a,b):
	return a + b
print(add(2,3)) #5

#it is better to make function parameter name meaningful

#parameter vs arguments
parameter is a variable in function defination
argument is the actual value of this variable that gets passed to function


5.default parameters
#give power a default value -- the thing happened to pop()
def exponent(num,power = 2):
	return num ** power

print(exponent(2,3))
print(exponent(3))  #9


 
