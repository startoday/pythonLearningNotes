1.list
[] tells python it is a list, seperate by ","
it can contain any type in the same list

demo_list = ["a", 1, 45.7, True]  #no error!

use len funtion to check how many item is in the list

len(demo_list) #4

#another way to build a list -- list() function
tasks = list(range(1,4))

2.access value in list
list always start counting at zero
friends = ["AZ", "Dood"]
print(friends[0]) # AZ
print(friends[3]) # error, list index out of range
print(friends[-1) # AZ negative value also work! 倒着数！，-1和0是一样的
>>> "Az" in friends
# True 可以check是不是在list里
 
 
 code people[-1][0]=="A"  not working, because in Python, strings are immutable;Basically, an object that is immutable cannot be modified once it is created unlike lists which are "mutable". 

3. iterate through a list
#for loop, while loop
nums = [1,2,3,True,8.15]
for num in nums
  print(num)
 
OR

nums = [1,2,3,True,8.15]
i = 0
while i < len(nums):
  print(nums[i])
  i += 1   #python 里没有i++！！
  
4. List Method - add stuff
(method is not the same thing as function, method is the one needs object to use?)
data = [1,2,3]
----data.append("purple) # append can only add ONE element to the end

----use extend to add more elements to the end of list 
list1 = [1,2,3,4]
list1.append([5,6]) #list1: [1,2,3,4,[5,6]]
list1.extend([5,6]) #list1:[1,2,3,4,5,6]

more example:
#注意这个例子里的list2 是list1里面的浅拷贝，所以改变list2的时候list1也变了！
list1 = [1,2,3,4]
list2 = list1
list1.append([5,6]) #list1: [1, 2, 3, 4, [5, 6]]
print(list1)  
list2.extend([5,6]) 
print(list2) #list2:[1, 2, 3, 4, [5, 6], 5, 6]
print(list1) #list1:[1, 2, 3, 4, [5, 6], 5, 6]

# list2.extend(7,8) #extend only take one argument as append
# print(list2)

----insert（the pos you want to insert, val to insert）
eg:
list1 = [1,2,3,4]
list1.insert(3,8) #list1: [1, 2, 3, 8, 4]
print(list1)  
list1.insert(-2, "hi") 
print(list1) #还是在该index处（前）插入 --list1:[[1, 2, 3, "hi",8, 4]---calculate the position based on old array
list1.insert(len(list1), "last")
print(list1) #list1:[1, 2, 3, "hi",8, 4, "last"]


5. list method -remove stuff
stuff_list.clear()  #delete everything (became an empty list)

pop() #remove the item at the given position in the list and return it
#if no index is specified, removes and returns last item in the list


list1.pop()  # "last"
list1.pop(1)  # 2
print(list1)  #[1, 3, 'hi', 8, 4]


remove #move the first value found and give a error if not found

list1.remove(1)  
print(list1)  #[3, 'hi', 8, 4]


6. list method
index() #return the index of the specified item in the list
#can specify start and end, check start from start (val, start_index, end_index)

count() # how many it shows in the list
#if not will be 0

reverse()
#IN PLACE! reverse the elements of the list  - update your origin list

sort()
#IN-PLACE！ asending order

join()
#actually a string method, not a list method --- always used with strings and lists
words = ["today", "is", "good!"]
" ".join(words) #will put a space in every one of the list element --- "today is good!"
#result is also a string
name = ["Mr", "Lee"]
res = ".".join(name) 
print(res) # Mr.Lee
